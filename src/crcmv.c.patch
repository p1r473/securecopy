--- mv.c
+++ crcmv.c
@@ -37,8 +37,11 @@
 #include "targetdir.h"
 #include "priv-set.h"
 
+/* HIJN */
+#include "crcsum.h"
+
 /* The official name of this program (e.g., no 'g' prefix).  */
-#define PROGRAM_NAME "mv"
+#define PROGRAM_NAME "crcmv"
 
 #define AUTHORS \
   proper_name ("Mike Parker"), \
@@ -68,6 +71,7 @@
 static struct option const long_options[] =
 {
   {"backup", optional_argument, nullptr, 'b'},
+  {"crc", optional_argument, nullptr, 'c'},
   {"context", no_argument, nullptr, 'Z'},
   {"debug", no_argument, nullptr, DEBUG_OPTION},
   {"force", no_argument, nullptr, 'f'},
@@ -117,6 +121,8 @@
 
   cp_options_default (x);
   x->copy_as_regular = false;  /* FIXME: maybe make this an option */
+  x->crc = false;
+  x->crc_with_xattr = false;
   x->reflink_mode = REFLINK_AUTO;
   x->dereference = DEREF_NEVER;
   x->unlink_dest_before_opening = false;
@@ -269,6 +275,11 @@
       --backup[=CONTROL]       make a backup of each existing destination file\
 \n\
   -b                           like --backup but does not accept an argument\n\
+  -c --crc[=x]                 check whether copy was successfull with checksum comparison\n\
+                               x: use (fresh) checksum stored in xattr or if not present,\n\
+                               store checksum in xattr of src and des\n\
+                               See also tool <crcsum> in same secure copy package\n\
+                               implies --preserve=xattr\n\
 "), stdout);
       fputs (_("\
       --debug                  explain how a file is copied.  Implies -v\n\
@@ -340,7 +351,7 @@
   /* Try to disable the ability to unlink a directory.  */
   priv_set_remove_linkdir ();
 
-  while ((c = getopt_long (argc, argv, "bfint:uvS:TZ", long_options, nullptr))
+  while ((c = getopt_long (argc, argv, "bc::fint:uvS:TZ", long_options, nullptr))
          != -1)
     {
       switch (c)
@@ -350,6 +361,29 @@
           if (optarg)
             version_control_string = optarg;
           break;
+        case 'c':
+          if (optarg)
+          {
+            if ( strcmp( optarg, "x") == 0 )
+            {
+              x.crc_with_xattr = true;
+              x.crc = false;
+              x.preserve_mode = true;
+              x.preserve_timestamps = true;
+              x.preserve_ownership = true;
+              x.preserve_links = true;
+              x.explicit_no_preserve_mode = false;
+              if (selinux_enabled)
+                x.preserve_security_context = true;
+              x.preserve_xattr = true;
+            }
+          }
+          else
+          {
+            x.crc = true;
+            x.crc_with_xattr = false;
+          }
+          break;
         case 'f':
           x.interactive = I_ALWAYS_YES;
           break;
